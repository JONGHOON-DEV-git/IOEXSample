@page "/"  
 
@using System.Text.Json  
@using System.Text  
  
  
@inject HttpClient Http  
<h3>Todo List</h3>  
<div class="input-rowa">  
<select class="custom-select" @bind="SelectCategoryId">  
<option value="0">카테고리 선택하세요 </option>  
@foreach (var category in Categories)
{
    <option value="@category.CategoryId">@category.Category</option>
}
</select>  
<input type="text" class="custom-input" placeholder="Input text here..." @bind="Title"/>  
<button class="custom-button" @onclick="AddTodo">Submit</button>  
</div>  
  
<ul class="list-group">  
@foreach (var todo in Todos)
{
    <li class="list-group-item">
        <input type="checkbox" checked="@todo.IsComplete" @onchange="((e) => UpdateTodo(todo, e))" class="mr-2"><span style="margin: 5px; width: 150px">@todo.Category</span> @todo.Title
    </li>
}
</ul>  
  
@code  
{
    private List<TodoDto> Todos = new();
    private List<CategoryDto> Categories = new();

    public int SelectCategoryId { get; set; }
    public string Title { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Todos = await Http.GetFromJsonAsync<List<TodoDto>>("api/todo") ;
        Categories = await Http.GetFromJsonAsync < List<CategoryDto>>("api/category");
    }

    private async Task AddTodo()
    {
        try
        {
            TodoPostRequest req = new()
            { CategoryId = SelectCategoryId, Title = Title };

            var todo = await Http.PostAsync<TodoDto>("api/Todo", req);
            todo.Category = this.Categories.FirstOrDefault(x => x.CategoryId == SelectCategoryId).Category;
            this.Todos.Add(todo);
            Title = "";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    private async Task UpdateTodo(TodoDto todo, ChangeEventArgs changeEventArgs)
    {
        try
        {
            TodoPutRequest req = new()
            { TodoId = todo.TodoId, isComplete = (bool)changeEventArgs.Value };
            var jsonData = JsonSerializer.Serialize(req);
            StringContent content = new(jsonData, Encoding.UTF8, "application/json");
            await Http.PutAsync("api/Todo", content);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
}